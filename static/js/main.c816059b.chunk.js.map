{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","style","height","width","cursor","defaultProps","Abouttext","TextForm","useState","text","setText","htmlFor","rows","value","onChange","event","target","backgroundColor","newText","toUpperCase","showAlert","newText1","toLowerCase","copy","alert","letter","prompt","count","i","length","charAt","console","log","split","replace","Alert","role","msg","App","setmode","setAlert","message","setTimeout","cls","document","body","classList","remove","add","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c816059b.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { Link } from 'react-router-dom'\r\nexport default function Navbar(props) {\r\n  \r\n    return (\r\n        \r\n<nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n       { /*<li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"#\">{props.Abouttext}</a>\r\n    </li>*/}\r\n\r\n      </ul>\r\n  <div className='d-flex'>\r\n    <div className=\"bg-primary rounded mx-2\" onClick={()=>{props.toggleMode('primary')}} style={{height:'20px', width:'20px', cursor:'pointer'}}></div>\r\n    <div className=\"bg-success rounded mx-2\" onClick={()=>{props.toggleMode('success')}} style={{height:'20px', width:'20px', cursor:'pointer'}}></div>\r\n    <div className=\"bg-warning rounded mx-2\" onClick={()=>{props.toggleMode('warning')}} style={{height:'20px', width:'20px', cursor:'pointer'}}></div>\r\n    <div className=\"bg-dark rounded mx-2\" onClick={()=>{props.toggleMode('dark')}} style={{height:'20px', width:'20px', cursor:'pointer'}}></div>\r\n    <div className=\"bg-light rounded mx-2\" onClick={()=>{props.toggleMode('light')}} style={{height:'20px', width:'20px', cursor:'pointer'}}></div>\r\n  </div>\r\n\r\n{/*<div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode} />\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\"></label>\r\n    </div>*/}\r\n\r\n    </div>\r\n  </div>\r\n</nav>  \r\n      \r\n    )\r\n}\r\nNavbar.propTypes={title:PropTypes.string.isRequired,\r\nAbouttext:PropTypes.string}\r\nNavbar.defaultProps={\r\n  title:'set title here',\r\n  Abouttext:'set text here'\r\n}\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport copy from \"copy-to-clipboard\"; \r\nexport default function TextForm(props) {\r\n  \r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    // console.log(\"UpperCase Was Clicked:-\"+text);\r\n    setText(newText);\r\n    props.showAlert(\"Converted into UpperCase\",\"success\");\r\n  };\r\n  const handleDownClick=()=>{\r\n      let newText1=text.toLowerCase();\r\n      setText(newText1);\r\n      props.showAlert(\"Converted into LowerCase\",\"success\");\r\n  };\r\n\r\n  \r\n  const handleOnChange = (event) => {\r\n    // console.log(\"onChange\");\r\n    setText(event.target.value);\r\n  };\r\n  const handleCopyText=()=>{\r\n    copy(text);\r\n    alert(\"Your text is copied :-\" +text);\r\n  };\r\n\r\n  const handleFindChar=()=>{\r\n    const letter = prompt('Enter a letter to check: ');\r\n    let count=0;\r\n    for (let i = 0; i < text.length; i++) {\r\n      if (text.charAt(i) === letter) {\r\n        count += 1;\r\n    }\r\n    console.log(count);\r\n    }\r\n  };\r\n\r\n  const handleClearText=()=>{\r\n   let  newtext=\"\";\r\n    setText(newtext);\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n<div>\r\n    <div className=\"mb-3 container\">\r\n        <label htmlFor=\"myBox\" className=\"form-label\">\r\n          {props.title}\r\n        </label>\r\n        <textarea\r\n          className=\"form-control\" id=\"myBox\"rows=\"12\" value={text} onChange={handleOnChange}\r\n        style={{backgroundColor:props.mode==='light'?'#fafafa':'pink'}}></textarea>\r\n        <button className=\"btn btn-primary my-3\" onClick={handleUpClick}>\r\n          Convert to UpperCase</button>\r\n        <button className=\"btn btn-primary my-3 mx-2\" onClick={handleDownClick}>\r\n            ConvertToLowerCase</button> \r\n        <button className=\"btn btn-primary my-3\" onClick={handleCopyText}>CopyText</button>       \r\n         <button className=\"btn btn-primary my-3 mx-2\" onClick={handleClearText}>ClearText</button> \r\n        <button className=\"btn btn-primary my-3 mx-2\" onClick={handleFindChar}>FindText</button> \r\n    </div>\r\n      <div className=\"my-3 container\">\r\n        <p>You have written</p>\r\n        <p>\r\n          Words:<b>{text.split(\" \").length}</b>&nbsp;Characters:\r\n          <b> {text.replace(/\\s/g, \"\").length}</b>\r\n        </p>\r\n        <p>\r\n          You Can Read this Article in &nbsp;\r\n          <b>{0.008 * text.split(\" \").length}minutes</b>\r\n        </p>\r\n        <p>Preview</p>\r\n        <p>{text}</p>\r\n      </div>\r\n</div>\r\n);\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  //not working\r\n /*const capitalize=(word)=>{\r\n    console.log(word);\r\n    const lower=word.toLowerCase();\r\n    lower=lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }*/\r\nreturn (\r\n    \r\n        <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n          <strong>{props.alert.type}</strong>:{props.alert.msg}\r\n        </div>\r\n    \r\n    )\r\n}\r\n","import Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport './App.css';\n//import About from './components/About';\nimport React, {useState} from \"react\";\nimport Alert from './components/Alert';\n/*import {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";*/\n\nfunction App() {\n  const[mode, setmode] = useState('light');\n  const[alert,setAlert] = useState('null');\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(()=>{\n    setAlert('null');\n    },1500);\n  }\n  const removeBodyClasses=()=>{\n    document.body.classList.remove('bg-primary');\n    document.body.classList.remove('bg-success');\n    document.body.classList.remove('bg-warning');\n    document.body.classList.remove('bg-dark');\n    document.body.classList.remove('bg-light');\n  \n\n    \n\n  }\n  const toggleMode=(cls)=>{\n    removeBodyClasses();\n    document.body.classList.add('bg-'+cls);\n    if(mode==='light'){\n      setmode('dark');\n      document.body.style.backgroundColor='grey';\n      showAlert(\"Dark Mode has been enabled\",\"success\");\n     // document.title='Textutilis-DarkMode';\n      //setInterval(()=>{\n       // document.title='Textutilis is Amazing Mode';\n     // },2000);\n      //setInterval(()=>{\n       // document.title='Install Textutilis Now'\n     // },1500);\n    }\n    else{\n      setmode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light Mode has been Enabled\",\"success\");\n    }\n  } \n\n  return (\n<> \n{/* <Router>*/}\n  <Navbar title=\"Textutilis\" mode={mode}  Abouttext=\"About\" toggleMode = {toggleMode} \n  />\n  \n  <Alert alert={alert} />\n  \n  \n  {/*<div className=\"container my-3\">\n  <Switch>\n    <Route exact path=\"/about\">\n      <About />\n      </Route>\n      <Route path=\"/\">*/}\n      <TextForm title=\"TextArea To Write Your Comments\" mode={mode} showAlert={showAlert}/> \n   { /*</Route>\n  </Switch>\n  </div>\n   </Router>*/}\n</>\n);\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}